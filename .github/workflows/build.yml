name: Build / Release
on: push

jobs:
    release:
        runs-on: ${{ matrix.os }}

        strategy:
            matrix:
                os: [macos-latest, ubuntu-latest, windows-latest]

        steps:
            - name: Check out Git repository
              uses: actions/checkout@v1

            - name: Install Node.js, NPM and Yarn
              uses: actions/setup-node@v1
              with:
                  node-version: 16

            - name: Compile Electron App
              uses: x6Pnda/action-electron-compiler@v1
              with:
                  github_token: ${{ secrets.github_token }}
                  package_manager: NPM
                  skip_build: false

# env:
#   CI: false
#   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

# jobs:
#   release:
#       runs-on: ${{ matrix.os }}

#       strategy:
#         matrix:
#           os: [ubuntu-latest, macos-latest, windows-latest]

#       steps:
#         - name: Check out Git repository
#           uses: actions/checkout@v3

#         - name: Install Node.js
#           uses: actions/setup-node@v3
#           with:
#             node-version: 18d

#         - name: Install Dependencies
#           run: npm install

#         - name: build-linux
#           if: matrix.os == 'ubuntu-latest'
#           # run: npm run build:linux

#         - name: build-mac
#           if: matrix.os == 'macos-latest'
#           # run: npm run build:mac

#         - name: build-win
#           if: matrix.os == 'windows-latest'
#           # run: npm run build:win

#         - name: release
#           uses: softprops/action-gh-release@v1
#           with:
#             draft: true
#             files: |
#               dist/*.exe
#               dist/*.zip
#               dist/*.dmg
#               dist/*.AppImage
#               dist/*.snap
#               dist/*.deb
#               dist/*.rpm
#               dist/*.tar.gz
#               dist/*.yml
#               dist/*.blockmap
